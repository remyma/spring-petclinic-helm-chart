apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "discovery-server.fullname" . }}-configs
  labels:
    app: {{ template "discovery-server.name" . }}
    chart: {{ template "discovery-server.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  admin-server.yml: |-
  api-gateway.yml: |-
  application.yml: |-
    # COMMON APPLICATION PROPERTIES

    # start services on random port by default
    server.port: 8080

    # embedded database init, supports mysql too trough the 'mysql' spring profile
    petclinic.database: hsqldb
    spring:
      datasource:
        schema: classpath*:db/hsqldb/schema.sql
        data: classpath*:db/hsqldb/data.sql
      sleuth:
        sampler:
          percentage: 1.0

    # JPA
    spring.jpa.hibernate.ddl-auto: none

    # Spring Boot 1.5 makes actuator secure by default
    management.security.enabled: false
    # Enable all Actuators and not only the two available by default /health and /info starting Spring Boot 2.0
    management.endpoints.web.exposure.include: "*"

    # Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
    # Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
    spring.cloud.refresh.refreshable: false


    # Logging
    logging.level.org.springframework: INFO

    # Metrics
    management:
      endpoint:
        metrics:
          enabled: true
        prometheus:
          enabled: true
      endpoints:
        web:
          exposure:
            include: '*'
      metrics:
        export:
          prometheus:
            enabled: true
  customers-service.yml: |-
    spring:
      profiles: docker
      zipkin:
        baseUrl: {{ template "tracing-server.url" . }}
    eureka:
      instance:
        # enable to register multiple app instances with a random server port
        instance-id: ${spring.application.name}:${random.uuid}
      client:
        serviceUrl:
          defaultZone: {{ template "discovery-server.url" . }}/eureka/
  discovery-server.yml: |-
    eureka:
      instance:
        hostname: localhost
      # standalone mode
      client:
        registerWithEureka: false
        fetchRegistry: false
        serviceUrl:
          defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/

  hystrix-dashboard.yml: |-
  tracing-server.yml: |-
    spring:
      profiles: docker
    eureka:
      instance:
        # enable to register multiple app instances with a random server port
        instance-id: ${spring.application.name}:${random.uuid}
      client:
        serviceUrl:
          defaultZone: http://discovery-server:8761/eureka/
  vets-service.yml: |-
  visits-service.yml: |-
